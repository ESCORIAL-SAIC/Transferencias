name: Prerelease MAUI APK on Dev Merge

on:
  push:
    branches:
      - ci-cd/setup

jobs:
  build:
    name: Build Signed MAUI APK and Prerelease
    runs-on: ubuntu-latest

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      ANDROID_HOME: /usr/local/lib/android/sdk
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup .NET
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      # 3Ô∏è‚É£ Setup Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # 4Ô∏è‚É£ Setup Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # 5Ô∏è‚É£ Install MAUI workloads
      - name: Install .NET MAUI workloads
        run: dotnet workload install maui-android

      # 6Ô∏è‚É£ Decode keystore into the project folder
      - name: Decode keystore from base64
        run: |
            mkdir -p ./Transferencias/Transferencias
            echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > ./Transferencias/Transferencias/my-release-key.keystore

      # 7Ô∏è‚É£ Restore .NET dependencies
      - name: Restore .NET MAUI dependencies
        run: dotnet restore ./Transferencias/Transferencias.sln

      # 8Ô∏è‚É£ Build MAUI APK Release
      - name: Build MAUI APK Release
        run: |
          dotnet publish ./Transferencias/Transferencias.sln -f:net8.0-android -c Release \
            -p:AndroidKeyStore=true \
            -p:AndroidSigningKeyStore=./Transferencias/Transferencias/my-release-key.keystore \
            -p:AndroidSigningStorePass="${{ secrets.ORG_ANDROID_KEYSTORE_PASSWORD }}" \
            -p:AndroidSigningKeyAlias="${{ secrets.ORG_ANDROID_KEY_ALIAS }}" \
            -p:AndroidSigningKeyPass="${{ secrets.ORG_ANDROID_KEY_PASSWORD }}" \
            -p:PublishTrimmed=true \
            -p:RunAOTCompilation=true \
            -p:EmbedAssembliesIntoApk=true \
            -o ./bin/Release/net8.0-android/publish

      # 9Ô∏è‚É£ Locate APK
      - name: Locate APK
        id: apk
        run: |
          APK_PATH=$(find ./bin/Release/net8.0-android/publish -name "*.apk" | head -n 1)
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT

      # üîü Generate version tag
      - name: Generate version tag
        id: versioning
        run: |
          VERSION_TAG="prerelease-$(date +'%Y.%m.%d.%H%M')"
          echo "version=$VERSION_TAG" >> $GITHUB_OUTPUT

      # 1Ô∏è‚É£1Ô∏è‚É£ Commit & Tag version
      - name: Commit & Tag version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.versioning.outputs.version }}
          git push origin ${{ steps.versioning.outputs.version }}

      # 1Ô∏è‚É£2Ô∏è‚É£ Generate changelog
      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelog-config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 1Ô∏è‚É£3Ô∏è‚É£ Create GitHub Prerelease
      - name: Create GitHub Prerelease
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.versioning.outputs.version }}
          name: Dev Prerelease ${{ steps.versioning.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          files: ${{ steps.apk.outputs.apk_path }}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
