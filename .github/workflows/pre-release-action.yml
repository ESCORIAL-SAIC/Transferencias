name: Prerelease MAUI APK on Dev Merge

on:
  push:
    branches:
      - ci-cd/setup
  workflow_dispatch:

jobs:
  build:
    name: Build Signed MAUI APK and Prerelease
    runs-on: windows-latest

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

    steps:
      # 1️⃣ Clonar repo
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2️⃣ Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      # 3️⃣ Instalar workloads MAUI
      - name: Install MAUI workload
        run: dotnet workload install maui
        shell: pwsh

      # 4️⃣ Restaurar keystore desde Base64 (PowerShell)
      - name: Decode keystore from base64
        run: |
          $keystorePath = Join-Path $PWD "my-release-key.keystore"
          [System.IO.File]::WriteAllBytes($keystorePath, [Convert]::FromBase64String("${{ secrets.ORG_ANDROID_KEYSTORE_BASE64 }}"))
          Write-Host "Keystore path: $keystorePath"
        shell: pwsh

      # 5️⃣ Build MAUI APK Release
      - name: Build MAUI APK Release
        run: |
          $keystorePath = Join-Path $PWD "my-release-key.keystore"
          $outputDir = Join-Path $PWD "output"
          dotnet publish "Transferencias/Transferencias.csproj" -f net8.0-android -c Release -o $outputDir /p:AndroidPackageFormat=apk /p:AndroidKeyStore=true /p:AndroidSigningKeyStore=$keystorePath /p:AndroidSigningKeyAlias="${{ secrets.ORG_ANDROID_KEY_ALIAS }}" /p:AndroidSigningKeyPass="${{ secrets.ORG_ANDROID_KEY_PASSWORD }}" /p:AndroidSigningStorePass="${{ secrets.ORG_ANDROID_KEYSTORE_PASSWORD }}" /p:PublishTrimmed=true /p:RunAOTCompilation=true /p:EmbedAssembliesIntoApk=true
          
          # Guardar ruta del APK generado
          $apkPath = Get-ChildItem $outputDir -Filter *.apk | Select-Object -First 1
          echo "apk_path=$($apkPath.FullName)" >> $env:GITHUB_ENV
        shell: pwsh

      # 6️⃣ Generar tag automático
      - name: Set VERSION_TAG
        id: versioning
        run: |
          $VERSION_TAG = "prerelease-$(Get-Date -Format 'yyyy.MM.dd.HHmm')"
          echo "version=$VERSION_TAG" >> $env:GITHUB_OUTPUT
        shell: pwsh

      # 7️⃣ Commit & push tag
      - name: Commit & Tag version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.versioning.outputs.version }}
          git push origin ${{ steps.versioning.outputs.version }}
        shell: pwsh

      # 8️⃣ Generar changelog
      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelog-config.json"
          commitMode: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 9️⃣ Crear GitHub Prerelease y subir APK
      - name: Create GitHub Prerelease
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.versioning.outputs.version }}
          name: Dev Prerelease ${{ steps.versioning.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          files: ${{ env.apk_path }}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

